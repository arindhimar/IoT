
aledonbledoff.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  000001ec  00000280  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001ec  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  00800112  00800112  00000292  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000292  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002c4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  00000304  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000072b  00000000  00000000  0000033c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000633  00000000  00000000  00000a67  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002d1  00000000  00000000  0000109a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000009c  00000000  00000000  0000136c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000038c  00000000  00000000  00001408  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000f5  00000000  00000000  00001794  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00001889  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__vector_13>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__vector_20>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec ee       	ldi	r30, 0xEC	; 236
  7c:	f1 e0       	ldi	r31, 0x01	; 1
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 31       	cpi	r26, 0x12	; 18
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e1       	ldi	r26, 0x12	; 18
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a5 31       	cpi	r26, 0x15	; 21
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 53 00 	call	0xa6	; 0xa6 <main>
  9e:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <main>:

int ct=0;

int main(void)
{
	cli();
  a6:	f8 94       	cli
	DDRB=0X20;
  a8:	80 e2       	ldi	r24, 0x20	; 32
  aa:	84 b9       	out	0x04, r24	; 4
	PORTB=0X00;
  ac:	15 b8       	out	0x05, r1	; 5
	
	UBRR0=0X67;
  ae:	87 e6       	ldi	r24, 0x67	; 103
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
  b6:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
	UCSR0A=0X00;
  ba:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
	UCSR0B=0XD0;
  be:	80 ed       	ldi	r24, 0xD0	; 208
  c0:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
	
	UDR0=0X00;
  c4:	10 92 c6 00 	sts	0x00C6, r1	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
	
	TCCR1A=0X00;
  c8:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
	TCCR1B=0X05;
  cc:	85 e0       	ldi	r24, 0x05	; 5
  ce:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
	TCNT1=0X00;
  d2:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
  d6:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
	TIMSK1=0X00;
  da:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
	
	sei();
  de:	78 94       	sei
  e0:	ff cf       	rjmp	.-2      	; 0xe0 <main+0x3a>

000000e2 <__vector_18>:
    }
}


ISR(USART_RX_vect)
{
  e2:	1f 92       	push	r1
  e4:	0f 92       	push	r0
  e6:	0f b6       	in	r0, 0x3f	; 63
  e8:	0f 92       	push	r0
  ea:	11 24       	eor	r1, r1
  ec:	8f 93       	push	r24
  ee:	9f 93       	push	r25
	ch=UDR0;
  f0:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
  f4:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <ch>
	
	if(ch=='a')
  f8:	81 36       	cpi	r24, 0x61	; 97
  fa:	61 f4       	brne	.+24     	; 0x114 <__vector_18+0x32>
	{
		PORTB=0X20;
  fc:	80 e2       	ldi	r24, 0x20	; 32
  fe:	85 b9       	out	0x05, r24	; 5
		TCNT1=0XFEC6;
 100:	86 ec       	ldi	r24, 0xC6	; 198
 102:	9e ef       	ldi	r25, 0xFE	; 254
 104:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
 108:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
		TIMSK1=0X01;
 10c:	81 e0       	ldi	r24, 0x01	; 1
 10e:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
 112:	0c c0       	rjmp	.+24     	; 0x12c <__vector_18+0x4a>
	}
	else if(ch=='b')
 114:	82 36       	cpi	r24, 0x62	; 98
 116:	51 f4       	brne	.+20     	; 0x12c <__vector_18+0x4a>
	{
		PORTB=0X00;
 118:	15 b8       	out	0x05, r1	; 5
		TCNT1=0XFEC6;
 11a:	86 ec       	ldi	r24, 0xC6	; 198
 11c:	9e ef       	ldi	r25, 0xFE	; 254
 11e:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
 122:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
		TIMSK1=0X01;
 126:	81 e0       	ldi	r24, 0x01	; 1
 128:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
	}
}
 12c:	9f 91       	pop	r25
 12e:	8f 91       	pop	r24
 130:	0f 90       	pop	r0
 132:	0f be       	out	0x3f, r0	; 63
 134:	0f 90       	pop	r0
 136:	1f 90       	pop	r1
 138:	18 95       	reti

0000013a <__vector_13>:

ISR(TIMER1_OVF_vect)
{
 13a:	1f 92       	push	r1
 13c:	0f 92       	push	r0
 13e:	0f b6       	in	r0, 0x3f	; 63
 140:	0f 92       	push	r0
 142:	11 24       	eor	r1, r1
 144:	8f 93       	push	r24
 146:	9f 93       	push	r25
 148:	ef 93       	push	r30
 14a:	ff 93       	push	r31
	TCNT1=0XFEC6;
 14c:	86 ec       	ldi	r24, 0xC6	; 198
 14e:	9e ef       	ldi	r25, 0xFE	; 254
 150:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
 154:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
	UCSR0B=0xD8;
 158:	88 ed       	ldi	r24, 0xD8	; 216
 15a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
	if(PORTB==0X20)
 15e:	85 b1       	in	r24, 0x05	; 5
 160:	80 32       	cpi	r24, 0x20	; 32
 162:	51 f4       	brne	.+20     	; 0x178 <__vector_13+0x3e>
	{
		UDR0=s1[ct];
 164:	e0 91 12 01 	lds	r30, 0x0112	; 0x800112 <__data_end>
 168:	f0 91 13 01 	lds	r31, 0x0113	; 0x800113 <__data_end+0x1>
 16c:	e7 5f       	subi	r30, 0xF7	; 247
 16e:	fe 4f       	sbci	r31, 0xFE	; 254
 170:	80 81       	ld	r24, Z
 172:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 176:	09 c0       	rjmp	.+18     	; 0x18a <__vector_13+0x50>
	}
	else
	{
		UDR0=s2[ct];
 178:	e0 91 12 01 	lds	r30, 0x0112	; 0x800112 <__data_end>
 17c:	f0 91 13 01 	lds	r31, 0x0113	; 0x800113 <__data_end+0x1>
 180:	e0 50       	subi	r30, 0x00	; 0
 182:	ff 4f       	sbci	r31, 0xFF	; 255
 184:	80 81       	ld	r24, Z
 186:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
	}
	
}
 18a:	ff 91       	pop	r31
 18c:	ef 91       	pop	r30
 18e:	9f 91       	pop	r25
 190:	8f 91       	pop	r24
 192:	0f 90       	pop	r0
 194:	0f be       	out	0x3f, r0	; 63
 196:	0f 90       	pop	r0
 198:	1f 90       	pop	r1
 19a:	18 95       	reti

0000019c <__vector_20>:



ISR(USART_TX_vect)
{
 19c:	1f 92       	push	r1
 19e:	0f 92       	push	r0
 1a0:	0f b6       	in	r0, 0x3f	; 63
 1a2:	0f 92       	push	r0
 1a4:	11 24       	eor	r1, r1
 1a6:	8f 93       	push	r24
 1a8:	9f 93       	push	r25
	ct=ct+1;
 1aa:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <__data_end>
 1ae:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <__data_end+0x1>
 1b2:	01 96       	adiw	r24, 0x01	; 1
 1b4:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <__data_end+0x1>
 1b8:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <__data_end>
	
	if(ct==9)
 1bc:	09 97       	sbiw	r24, 0x09	; 9
 1be:	69 f4       	brne	.+26     	; 0x1da <__vector_20+0x3e>
	{
		TCNT1=0X00;
 1c0:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
 1c4:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
		TIMSK1=0X00;
 1c8:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
		UCSR0B=0XD0;
 1cc:	80 ed       	ldi	r24, 0xD0	; 208
 1ce:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
		ct=0;
 1d2:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <__data_end+0x1>
 1d6:	10 92 12 01 	sts	0x0112, r1	; 0x800112 <__data_end>
	}
 1da:	9f 91       	pop	r25
 1dc:	8f 91       	pop	r24
 1de:	0f 90       	pop	r0
 1e0:	0f be       	out	0x3f, r0	; 63
 1e2:	0f 90       	pop	r0
 1e4:	1f 90       	pop	r1
 1e6:	18 95       	reti

000001e8 <_exit>:
 1e8:	f8 94       	cli

000001ea <__stop_program>:
 1ea:	ff cf       	rjmp	.-2      	; 0x1ea <__stop_program>
